CREATE OR REPLACE PACKAGE BODY ROUTING_UTIL
AS
FUNCTION GET_STATUS_ID(
    P_STATUS VARCHAR2)
  RETURN NUMBER
IS
  L_ID NUMBER;
BEGIN
  SELECT
    DICT_ID
  INTO
    L_ID
  FROM
    DICTIONARIES
  WHERE
    DICTIONARY_NAME = 'ARTICLE_STATUS'
  AND CODE          = P_STATUS;
  RETURN L_ID;
END;

FUNCTION GET_ACC_STATUS_ID(
    P_STATUS VARCHAR2)
  RETURN NUMBER
IS
  L_ID NUMBER;
BEGIN
  SELECT
    DICT_ID
  INTO
    L_ID
  FROM
    DICTIONARIES
  WHERE
    DICTIONARY_NAME = 'ACCEPTOR_STATUS'
  AND CODE          = P_STATUS;
  RETURN L_ID;
  EXCEPTION
    WHEN NO_DATA_FOUND 
      THEN RETURN NULL;
END;

FUNCTION IS_EMPTY(
    P_STR VARCHAR2)
  RETURN NUMBER
IS
BEGIN
  RETURN
  CASE
  WHEN P_STR IS NULL THEN
    0
  WHEN P_STR ='' THEN
    0
  ELSE
    1
  END;
END;
PROCEDURE INSERT_RULE(
    P_NAME           VARCHAR2 ,
    P_DESCRIPTION    VARCHAR2,
    P_FOR_ROLE       VARCHAR2,
    P_FROM_STATUS    VARCHAR2,
    P_TO_STATUS      VARCHAR2,
    P_READY_TO_PRINT VARCHAR2,
    P_FOR_ACCEPTOR   VARCHAR2,
    P_FOR_AUTHOR     VARCHAR2,
    P_FOR_MANAGER    VARCHAR2,
    P_PICK_ACCEPTOR  VARCHAR2,
    P_PICK_MANAGER   VARCHAR2,
    P_CLEAR_MANAGER  VARCHAR2,
    P_CLEAR_ACC	   VARCHAR2,
    P_ACC_STATE VARCHAR2,
      P_ACC_STATE_CODE VARCHAR2,
      P_FROM_ACC_STATE VARCHAR2,
      P_APPLY_ACC VARCHAR2,
      P_RULE_CODE VARCHAR2
    )
IS
BEGIN
  INSERT
  INTO
    ROUTING_RULES
    (
      RULE_ID,
      NAME,
      DESCRIPTION,
      FOR_ROLE_NAME,
      FROM_STATUS,
      TO_STATUS,
      READY_TO_PRINT,
      FOR_ACCEPTOR,
      FOR_AUTHOR,
      FOR_MANAGER,
      PICK_ACCEPTORS,
      PICK_MANAGER,
      CLEAR_MANAGER,
      CLEAR_ACCEPTORS,
      IS_ACTIVE,
      SET_ACCEPTOR_STATUS,
      ACCEPT_STATUS,
      FROM_ACCEPTORS_STATE,
      APPLY_ACCEPTORS_STATE,
      RULE_CODE
    )
    VALUES
    (
      ROUTING_RULES_SEQ.NEXTVAL,
      P_NAME,
      P_DESCRIPTION,
      P_FOR_ROLE,
      GET_STATUS_ID(P_FROM_STATUS),
      GET_STATUS_ID(P_TO_STATUS),
      IS_EMPTY(P_READY_TO_PRINT),
      IS_EMPTY(P_FOR_ACCEPTOR),
      IS_EMPTY(P_FOR_AUTHOR),
      IS_EMPTY(P_FOR_MANAGER),
      IS_EMPTY(P_PICK_ACCEPTOR),
      IS_EMPTY(P_PICK_MANAGER),
      IS_EMPTY(P_CLEAR_MANAGER),
      IS_EMPTY(P_CLEAR_ACC),
      1,
      IS_EMPTY(P_ACC_STATE),
      GET_ACC_STATUS_ID(P_ACC_STATE_CODE),
      IS_EMPTY(P_FROM_ACC_STATE),
      IS_EMPTY(P_APPLY_ACC),
      P_RULE_CODE
    );
END INSERT_RULE;

PROCEDURE ADD_RULE_VALIDATION(
    P_RULE_CODE VARCHAR2,
    P_VALIDATION_CODE VARCHAR2
  ) IS
BEGIN
  INSERT INTO RULES_VALIDATIONS(RULE_ID, DICT_ID)
  VALUES (
    (SELECT RULE_ID FROM ROUTING_RULES WHERE RULE_CODE = P_RULE_CODE),
    (SELECT DICT_ID FROM DICTIONARIES WHERE CODE = P_VALIDATION_CODE AND DICTIONARY_NAME ='VALIDATION_RULE')
  );
END;
END ROUTING_UTIL;